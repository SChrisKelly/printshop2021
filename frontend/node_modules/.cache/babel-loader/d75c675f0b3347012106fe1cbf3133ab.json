{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/outsi/Desktop/EvolveU/ProShop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","orderCreate","orderDetails","orderPay","orderListMy","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA6D,OAA7D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACIC,kBADJ,EAEIC,qBAFJ,QAGO,4BAHP;AAIA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACIC,gBADJ,EAEIC,mBAFJ,EAGIC,kBAHJ,EAIIC,wBAJJ,EAKIC,eALJ,EAMIC,iBANJ,QAOO,yBAPP;AAQA,SACIC,kBADJ,EAEIC,mBAFJ,EAGIC,eAHJ,EAIIC,kBAJJ,QAKO,0BALP;AAOA,MAAMC,OAAO,GAAGjB,eAAe,CAAC;AAC5BkB,EAAAA,WAAW,EAAEd,kBADe;AAE5Be,EAAAA,cAAc,EAAEd,qBAFY;AAG5Be,EAAAA,IAAI,EAAEd,WAHsB;AAI5Be,EAAAA,SAAS,EAAEd,gBAJiB;AAK5Be,EAAAA,YAAY,EAAEd,mBALc;AAM5Be,EAAAA,WAAW,EAAEd,kBANe;AAO5Be,EAAAA,iBAAiB,EAAEd,wBAPS;AAQ5Be,EAAAA,QAAQ,EAAEd,eARkB;AAS5Be,EAAAA,UAAU,EAAEd,iBATgB;AAU5Be,EAAAA,WAAW,EAAEd,kBAVe;AAW5Be,EAAAA,YAAY,EAAEd,mBAXc;AAY5Be,EAAAA,QAAQ,EAAEd,eAZkB;AAa5Be,EAAAA,WAAW,EAAEd;AAbe,CAAD,CAA/B;AAgBA,MAAMe,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAChEH,YAAY,CAACC,OAAb,CAAqB,WAArB,CADgE,CAApC,GACS,EADtC;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAC9DH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAD8D,CAAnC,GACS,IADrC;AAGA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0CC,IAAI,CAACC,KAAL,CAC5EH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAD4E,CAA1C,GACS,EAD5C;AAGA,MAAMK,YAAY,GAAG;AACjBlB,EAAAA,IAAI,EAAE;AAAEmB,IAAAA,SAAS,EAAER,oBAAb;AAAmCS,IAAAA,eAAe,EAAEH;AAApD,GADW;AAEjBhB,EAAAA,SAAS,EAAE;AAAEoB,IAAAA,QAAQ,EAAEL;AAAZ;AAFM,CAArB;AAKA,MAAMM,UAAU,GAAG,CAACxC,KAAD,CAAnB;AAEA,MAAMyC,KAAK,GAAG5C,WAAW,CACrBkB,OADqB,EAErBqB,YAFqB,EAGrBnC,mBAAmB,CAACF,eAAe,CAAC,GAAGyC,UAAJ,CAAhB,CAHE,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { \r\n    productListReducer, \r\n    productDetailsReducer,\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { \r\n    userLoginReducer, \r\n    userRegisterReducer, \r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n} from './reducers/userReducers'\r\nimport { \r\n    orderCreateReducer, \r\n    orderDetailsReducer, \r\n    orderPayReducer ,\r\n    orderListMyReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse\r\n(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse\r\n(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse\r\n(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n"]},"metadata":{},"sourceType":"module"}