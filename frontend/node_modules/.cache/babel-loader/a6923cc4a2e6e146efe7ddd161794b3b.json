{"ast":null,"code":"import _slicedToArray from\"C:/Users/outsi/Desktop/EvolveU/PrintShop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../components/FormContainer';import CheckoutSteps from'../components/CheckoutSteps';import{saveShippingAddress}from'../actions/cartActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ShippingScreen=function ShippingScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;var _useState=useState(shippingAddress.address),_useState2=_slicedToArray(_useState,2),address=_useState2[0],setAddress=_useState2[1];var _useState3=useState(shippingAddress.city),_useState4=_slicedToArray(_useState3,2),city=_useState4[0],setCity=_useState4[1];var _useState5=useState(shippingAddress.postalCode),_useState6=_slicedToArray(_useState5,2),postalCode=_useState6[0],setPostalCode=_useState6[1];var _useState7=useState(shippingAddress.country),_useState8=_slicedToArray(_useState7,2),country=_useState8[0],setCountry=_useState8[1];var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();dispatch(saveShippingAddress({address:address,city:city,postalCode:postalCode,country:country}));history.push('/payment');};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Shipping\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"address\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter address\",value:address,required:true,onChange:function onChange(e){return setAddress(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"city\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"City\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter city\",value:city,required:true,onChange:function onChange(e){return setCity(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"postalcode\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Postal Code\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter postal code\",value:postalCode,required:true,onChange:function onChange(e){return setPostalCode(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"country\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Country\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter country\",value:country,required:true,onChange:function onChange(e){return setCountry(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",varian:\"primary\",className:\"p-2 mt-2\",children:\"Continue\"})]})]});};export default ShippingScreen;","map":{"version":3,"sources":["C:/Users/outsi/Desktop/EvolveU/printshop/frontend/src/screens/ShippingScreen.js"],"names":["React","useState","Form","Button","useDispatch","useSelector","FormContainer","CheckoutSteps","saveShippingAddress","ShippingScreen","history","cart","state","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","dispatch","submitHandler","e","preventDefault","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {   \r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return <FormContainer>\r\n        <CheckoutSteps step1 step2 />\r\n        <h1>Shipping</h1>\r\n        <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='address'>\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter address'\r\n                    value={address}\r\n                    required\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='city'>\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter city'\r\n                    value={city}\r\n                    required\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='postalcode'>\r\n                <Form.Label>Postal Code</Form.Label>\r\n                <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter postal code'\r\n                    value={postalCode}\r\n                    required\r\n                    onChange={(e) => setPostalCode(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='country'>\r\n                <Form.Label>Country</Form.Label>\r\n                <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter country'\r\n                    value={country}\r\n                    required\r\n                    onChange={(e) => setCountry(e.target.value)}\r\n                ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' varian='primary' className='p-2 mt-2'>\r\n                Continue\r\n            </Button>\r\n        </Form>\r\n    </FormContainer>\r\n}\r\n\r\nexport default ShippingScreen\r\n"]},"metadata":{},"sourceType":"module"}